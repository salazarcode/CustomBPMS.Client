name: Build and Deploy Blazor WebAssembly

on:
  push:
    branches:
      - main # Cambia a la rama que prefieras para despliegues

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      # Paso 2: Configurar .NET 8
      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x" # Especifica la versión de .NET 8

      # Paso 3: Restaurar dependencias
      - name: Restaurar dependencias
        run: dotnet restore

      # Paso 4: Publicar la aplicación Blazor WebAssembly
      - name: Publicar la aplicación Blazor WebAssembly
        run: dotnet publish -c Release -o build

      # Paso 5: Configurar el Agente SSH
      - name: Configurar el Agente SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Paso 6: Desplegar al servidor mediante SCP
      - name: Desplegar al servidor vía SCP
        run: scp -r build/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.DEPLOY_PATH }}/
        # Nota: Asegúrate de que DEPLOY_PATH termina con una barra diagonal (/)

      # Paso 7: Reiniciar Nginx en el servidor (Opcional)
      - name: Reiniciar Nginx
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'sudo systemctl restart nginx'
