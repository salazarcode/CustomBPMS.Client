name: Build and Deploy Blazor WebAssembly

on:
  push:
    branches:
      - main # Cambia a la rama que prefieras para despliegues

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      # Paso 2: Configurar .NET 8
      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x" # Especifica la versión de .NET 8

      # Paso 3: Restaurar dependencias
      - name: Restaurar dependencias
        run: dotnet restore

      # Paso 4: Publicar la aplicación Blazor WebAssembly
      - name: Publicar la aplicación Blazor WebAssembly
        run: dotnet publish -c Release -o build

      # Paso 5: Desplegar al servidor mediante SCP
      - name: Desplegar al servidor vía SCP
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22 # Cambia si tu servidor SSH usa otro puerto
          source: "build/*"
          target: ${{ secrets.DEPLOY_PATH }}

      # Paso 6: Reiniciar Nginx en el servidor (Opcional)
      - name: Reiniciar Nginx
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22 # Cambia si tu servidor SSH usa otro puerto
          script: |
            sudo systemctl restart nginx
